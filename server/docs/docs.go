// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-05-12 18:43:27.546326 +0200 CEST m=+0.029522179

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "My career's documentation",
        "title": "Vitae",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/about": {
            "get": {
                "description": "A simple statement depicting my experience, and stuff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Personal Statement",
                "responses": {
                    "200": {
                        "description": "A simple summary",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/achievements": {
            "get": {
                "description": "A listing of some achievements I've achieved",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "All achievements and noteworthy facts",
                "responses": {
                    "200": {
                        "description": "List of achievements",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/achievements/{id}": {
            "get": {
                "description": "A single, noteworthy achievement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "A single achievement",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Achievement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single thing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.responseError"
                        }
                    }
                }
            }
        },
        "/download": {
            "get": {
                "description": "Download or view this CV in PDF form to share with your HR friends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/pdf"
                ],
                "summary": "CV in PDF form",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/education": {
            "get": {
                "description": "A listing of most courses I've attended. However, given I'm mostly self-taught, it's not really representative of my expertise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Courses I've attended",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.EducationSpan"
                            }
                        }
                    }
                }
            }
        },
        "/education/{id}": {
            "get": {
                "description": "A single course I've attended",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "A single course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.EducationSpan"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.responseError"
                        }
                    }
                }
            }
        },
        "/hobbies": {
            "get": {
                "description": "Some relevant hobbies I dabble with",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Hobbies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/references": {
            "get": {
                "description": "Some people which whom I've worked with, and can vouch for me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "References",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Reference"
                            }
                        }
                    }
                }
            }
        },
        "/references/{id}": {
            "get": {
                "description": "Someone who can vouch for me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "A single reference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reference ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.Reference"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.responseError"
                        }
                    }
                }
            }
        },
        "/skills": {
            "get": {
                "description": "A list of some key skills I consider noteworthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Key skills",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/skills/{id}": {
            "get": {
                "description": "A single, cool skill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "A single skill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Skill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.responseError"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Some statistics about this API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Others"
                ],
                "summary": "Statistics",
                "responses": {
                    "200": {
                        "description": "Some stats",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.stats"
                        }
                    }
                }
            }
        },
        "/work": {
            "get": {
                "description": "A listing of the most relevant job positions I've held.\nEarly jobs, such as waiter at a small-town café, are omitted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Most jobs I've had so far",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.WorkSpan"
                            }
                        }
                    }
                }
            }
        },
        "/work/{id}": {
            "get": {
                "description": "A single place I've worked in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "A single workplace",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/types.WorkSpan"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/server.responseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.requestors": {
            "type": "object",
            "properties": {
                "processed_requests": {
                    "type": "integer"
                },
                "uniq_user_agents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server.responseError": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "server.stats": {
            "type": "object",
            "properties": {
                "mtx": {
                    "type": "string"
                },
                "request_stats": {
                    "type": "object",
                    "$ref": "#/definitions/server.requestors"
                },
                "serving_since": {
                    "type": "string"
                },
                "system": {
                    "type": "object",
                    "$ref": "#/definitions/server.sysStats"
                },
                "uptime": {
                    "type": "string"
                }
            }
        },
        "server.sysStats": {
            "type": "object",
            "properties": {
                "current_memory": {
                    "type": "integer"
                },
                "gc_runs": {
                    "type": "integer"
                },
                "heap_live_objects": {
                    "type": "integer"
                },
                "last_gc_in_ns": {
                    "type": "integer"
                },
                "sys_reserved": {
                    "type": "integer"
                }
            }
        },
        "types.EducationSpan": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "institute": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "span": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.Reference": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.WorkSpan": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "span": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
